// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: proto_coin.proto

package coin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoinGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CoinGetReq) Reset() {
	*x = CoinGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGetReq) ProtoMessage() {}

func (x *CoinGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGetReq.ProtoReflect.Descriptor instead.
func (*CoinGetReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{0}
}

func (x *CoinGetReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinGetReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CoinGetRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TotalAmount int64 `protobuf:"varint,2,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
}

func (x *CoinGetRep) Reset() {
	*x = CoinGetRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGetRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGetRep) ProtoMessage() {}

func (x *CoinGetRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGetRep.ProtoReflect.Descriptor instead.
func (*CoinGetRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{1}
}

func (x *CoinGetRep) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinGetRep) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type CoinIncrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Amount int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CoinIncrReq) Reset() {
	*x = CoinIncrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinIncrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinIncrReq) ProtoMessage() {}

func (x *CoinIncrReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinIncrReq.ProtoReflect.Descriptor instead.
func (*CoinIncrReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{2}
}

func (x *CoinIncrReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinIncrReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CoinIncrReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinIncrReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CoinIncrRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CoinIncrRep) Reset() {
	*x = CoinIncrRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinIncrRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinIncrRep) ProtoMessage() {}

func (x *CoinIncrRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinIncrRep.ProtoReflect.Descriptor instead.
func (*CoinIncrRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{3}
}

func (x *CoinIncrRep) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CoinDecrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Amount int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CoinDecrReq) Reset() {
	*x = CoinDecrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinDecrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinDecrReq) ProtoMessage() {}

func (x *CoinDecrReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinDecrReq.ProtoReflect.Descriptor instead.
func (*CoinDecrReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{4}
}

func (x *CoinDecrReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinDecrReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CoinDecrReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinDecrReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Coin7DayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	LastId int64 `protobuf:"varint,3,opt,name=lastId,proto3" json:"lastId,omitempty"`
}

func (x *Coin7DayReq) Reset() {
	*x = Coin7DayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin7DayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin7DayReq) ProtoMessage() {}

func (x *Coin7DayReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin7DayReq.ProtoReflect.Descriptor instead.
func (*Coin7DayReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{5}
}

func (x *Coin7DayReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Coin7DayReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Coin7DayReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

type Coin7DayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc      string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Coin7DayData) Reset() {
	*x = Coin7DayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin7DayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin7DayData) ProtoMessage() {}

func (x *Coin7DayData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin7DayData.ProtoReflect.Descriptor instead.
func (*Coin7DayData) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{6}
}

func (x *Coin7DayData) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Coin7DayData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Coin7DayData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Coin7DayData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Coin7DayData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type Coin7DayRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Coin7DayData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Coin7DayRep) Reset() {
	*x = Coin7DayRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin7DayRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin7DayRep) ProtoMessage() {}

func (x *Coin7DayRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin7DayRep.ProtoReflect.Descriptor instead.
func (*Coin7DayRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{7}
}

func (x *Coin7DayRep) GetData() []*Coin7DayData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoinWithDrawApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CoinWithDrawApplyReq) Reset() {
	*x = CoinWithDrawApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawApplyReq) ProtoMessage() {}

func (x *CoinWithDrawApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawApplyReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawApplyReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{8}
}

func (x *CoinWithDrawApplyReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawApplyReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CoinWithDrawApplyReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CoinWithDrawApplyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoinWithDrawApplyRep) Reset() {
	*x = CoinWithDrawApplyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawApplyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawApplyRep) ProtoMessage() {}

func (x *CoinWithDrawApplyRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawApplyRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawApplyRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{9}
}

type CoinWithDrawListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CoinWithDrawListReq) Reset() {
	*x = CoinWithDrawListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawListReq) ProtoMessage() {}

func (x *CoinWithDrawListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawListReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawListReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{10}
}

func (x *CoinWithDrawListReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CoinWithDrawListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId     int64  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId    int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status    string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` //提现状态
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Desc      string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"` //备注
}

func (x *CoinWithDrawListData) Reset() {
	*x = CoinWithDrawListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawListData) ProtoMessage() {}

func (x *CoinWithDrawListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawListData.ProtoReflect.Descriptor instead.
func (*CoinWithDrawListData) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{11}
}

func (x *CoinWithDrawListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoinWithDrawListData) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawListData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CoinWithDrawListData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinWithDrawListData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CoinWithDrawListData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CoinWithDrawListData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CoinWithDrawListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CoinWithDrawListData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CoinWithDrawListRep) Reset() {
	*x = CoinWithDrawListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawListRep) ProtoMessage() {}

func (x *CoinWithDrawListRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawListRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawListRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{12}
}

func (x *CoinWithDrawListRep) GetData() []*CoinWithDrawListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoinWithDrawRevokeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId     int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	WithDrawId int64 `protobuf:"varint,3,opt,name=withDrawId,proto3" json:"withDrawId,omitempty"`
}

func (x *CoinWithDrawRevokeReq) Reset() {
	*x = CoinWithDrawRevokeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawRevokeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawRevokeReq) ProtoMessage() {}

func (x *CoinWithDrawRevokeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawRevokeReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawRevokeReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{13}
}

func (x *CoinWithDrawRevokeReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawRevokeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CoinWithDrawRevokeReq) GetWithDrawId() int64 {
	if x != nil {
		return x.WithDrawId
	}
	return 0
}

type CoinWithDrawRevokeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoinWithDrawRevokeRep) Reset() {
	*x = CoinWithDrawRevokeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawRevokeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawRevokeRep) ProtoMessage() {}

func (x *CoinWithDrawRevokeRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawRevokeRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawRevokeRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{14}
}

type CoinWithDrawPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Page  int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size  int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CoinWithDrawPageListReq) Reset() {
	*x = CoinWithDrawPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawPageListReq) ProtoMessage() {}

func (x *CoinWithDrawPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawPageListReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawPageListReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{15}
}

func (x *CoinWithDrawPageListReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawPageListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CoinWithDrawPageListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CoinWithDrawPageListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CoinWithDrawListData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CoinWithDrawPageListRep) Reset() {
	*x = CoinWithDrawPageListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawPageListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawPageListRep) ProtoMessage() {}

func (x *CoinWithDrawPageListRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawPageListRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawPageListRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{16}
}

func (x *CoinWithDrawPageListRep) GetData() []*CoinWithDrawListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoinWithDrawAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	WithDrawId int64  `protobuf:"varint,2,opt,name=withDrawId,proto3" json:"withDrawId,omitempty"`
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CoinWithDrawAgreeReq) Reset() {
	*x = CoinWithDrawAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawAgreeReq) ProtoMessage() {}

func (x *CoinWithDrawAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawAgreeReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawAgreeReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{17}
}

func (x *CoinWithDrawAgreeReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawAgreeReq) GetWithDrawId() int64 {
	if x != nil {
		return x.WithDrawId
	}
	return 0
}

func (x *CoinWithDrawAgreeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CoinWithDrawAgreeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoinWithDrawAgreeRep) Reset() {
	*x = CoinWithDrawAgreeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawAgreeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawAgreeRep) ProtoMessage() {}

func (x *CoinWithDrawAgreeRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawAgreeRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawAgreeRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{18}
}

type CoinWithDrawRefuseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	WithDrawId int64  `protobuf:"varint,2,opt,name=withDrawId,proto3" json:"withDrawId,omitempty"`
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CoinWithDrawRefuseReq) Reset() {
	*x = CoinWithDrawRefuseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawRefuseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawRefuseReq) ProtoMessage() {}

func (x *CoinWithDrawRefuseReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawRefuseReq.ProtoReflect.Descriptor instead.
func (*CoinWithDrawRefuseReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{19}
}

func (x *CoinWithDrawRefuseReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinWithDrawRefuseReq) GetWithDrawId() int64 {
	if x != nil {
		return x.WithDrawId
	}
	return 0
}

func (x *CoinWithDrawRefuseReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CoinWithDrawRefuseRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoinWithDrawRefuseRep) Reset() {
	*x = CoinWithDrawRefuseRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinWithDrawRefuseRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinWithDrawRefuseRep) ProtoMessage() {}

func (x *CoinWithDrawRefuseRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinWithDrawRefuseRep.ProtoReflect.Descriptor instead.
func (*CoinWithDrawRefuseRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{20}
}

type CoinTransferListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	WithDrawId int64 `protobuf:"varint,2,opt,name=withDrawId,proto3" json:"withDrawId,omitempty"`
}

func (x *CoinTransferListReq) Reset() {
	*x = CoinTransferListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinTransferListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTransferListReq) ProtoMessage() {}

func (x *CoinTransferListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTransferListReq.ProtoReflect.Descriptor instead.
func (*CoinTransferListReq) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{21}
}

func (x *CoinTransferListReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CoinTransferListReq) GetWithDrawId() int64 {
	if x != nil {
		return x.WithDrawId
	}
	return 0
}

type CoinTransferListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CoinTransferListData) Reset() {
	*x = CoinTransferListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinTransferListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTransferListData) ProtoMessage() {}

func (x *CoinTransferListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTransferListData.ProtoReflect.Descriptor instead.
func (*CoinTransferListData) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{22}
}

func (x *CoinTransferListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoinTransferListData) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type CoinTransferListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CoinTransferListData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CoinTransferListRep) Reset() {
	*x = CoinTransferListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinTransferListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTransferListRep) ProtoMessage() {}

func (x *CoinTransferListRep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTransferListRep.ProtoReflect.Descriptor instead.
func (*CoinTransferListRep) Descriptor() ([]byte, []int) {
	return file_proto_coin_proto_rawDescGZIP(), []int{23}
}

func (x *CoinTransferListRep) GetData() []*CoinTransferListData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_coin_proto protoreflect.FileDescriptor

var file_proto_coin_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x3a, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x0b,
	0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x63,
	0x72, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x0b,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x63, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x53, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x37, 0x44, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x69, 0x6e, 0x37, 0x44, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x37, 0x44, 0x61, 0x79, 0x52,
	0x65, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x37, 0x44, 0x61, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x14, 0x43, 0x6f,
	0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x70,
	0x22, 0x43, 0x0a, 0x13, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x45,
	0x0a, 0x13, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x15, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x70, 0x22, 0x57, 0x0a, 0x17, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x49,
	0x0a, 0x17, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x14, 0x43, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x70, 0x22, 0x61, 0x0a, 0x15, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x22,
	0x4b, 0x0a, 0x13, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x14,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x13,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x9a, 0x06, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x10,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72,
	0x12, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x49,
	0x6e, 0x63, 0x72, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x63, 0x72, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x63, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x72, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x16,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x37, 0x44, 0x61, 0x79, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x37, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x37, 0x44, 0x61, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x11, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x10, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x43, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12,
	0x1b, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x14, 0x43,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x11, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x00,
	0x42, 0x07, 0x5a, 0x05, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_coin_proto_rawDescOnce sync.Once
	file_proto_coin_proto_rawDescData = file_proto_coin_proto_rawDesc
)

func file_proto_coin_proto_rawDescGZIP() []byte {
	file_proto_coin_proto_rawDescOnce.Do(func() {
		file_proto_coin_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_coin_proto_rawDescData)
	})
	return file_proto_coin_proto_rawDescData
}

var file_proto_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_coin_proto_goTypes = []interface{}{
	(*CoinGetReq)(nil),              // 0: coin.CoinGetReq
	(*CoinGetRep)(nil),              // 1: coin.CoinGetRep
	(*CoinIncrReq)(nil),             // 2: coin.CoinIncrReq
	(*CoinIncrRep)(nil),             // 3: coin.CoinIncrRep
	(*CoinDecrReq)(nil),             // 4: coin.CoinDecrReq
	(*Coin7DayReq)(nil),             // 5: coin.Coin7DayReq
	(*Coin7DayData)(nil),            // 6: coin.Coin7DayData
	(*Coin7DayRep)(nil),             // 7: coin.Coin7DayRep
	(*CoinWithDrawApplyReq)(nil),    // 8: coin.CoinWithDrawApplyReq
	(*CoinWithDrawApplyRep)(nil),    // 9: coin.CoinWithDrawApplyRep
	(*CoinWithDrawListReq)(nil),     // 10: coin.CoinWithDrawListReq
	(*CoinWithDrawListData)(nil),    // 11: coin.CoinWithDrawListData
	(*CoinWithDrawListRep)(nil),     // 12: coin.CoinWithDrawListRep
	(*CoinWithDrawRevokeReq)(nil),   // 13: coin.CoinWithDrawRevokeReq
	(*CoinWithDrawRevokeRep)(nil),   // 14: coin.CoinWithDrawRevokeRep
	(*CoinWithDrawPageListReq)(nil), // 15: coin.CoinWithDrawPageListReq
	(*CoinWithDrawPageListRep)(nil), // 16: coin.CoinWithDrawPageListRep
	(*CoinWithDrawAgreeReq)(nil),    // 17: coin.CoinWithDrawAgreeReq
	(*CoinWithDrawAgreeRep)(nil),    // 18: coin.CoinWithDrawAgreeRep
	(*CoinWithDrawRefuseReq)(nil),   // 19: coin.CoinWithDrawRefuseReq
	(*CoinWithDrawRefuseRep)(nil),   // 20: coin.CoinWithDrawRefuseRep
	(*CoinTransferListReq)(nil),     // 21: coin.CoinTransferListReq
	(*CoinTransferListData)(nil),    // 22: coin.CoinTransferListData
	(*CoinTransferListRep)(nil),     // 23: coin.CoinTransferListRep
}
var file_proto_coin_proto_depIdxs = []int32{
	6,  // 0: coin.Coin7DayRep.data:type_name -> coin.Coin7DayData
	11, // 1: coin.CoinWithDrawListRep.data:type_name -> coin.CoinWithDrawListData
	11, // 2: coin.CoinWithDrawPageListRep.data:type_name -> coin.CoinWithDrawListData
	22, // 3: coin.CoinTransferListRep.data:type_name -> coin.CoinTransferListData
	0,  // 4: coin.CoinService.CoinGet:input_type -> coin.CoinGetReq
	2,  // 5: coin.CoinService.CoinIncr:input_type -> coin.CoinIncrReq
	4,  // 6: coin.CoinService.CoinDecr:input_type -> coin.CoinDecrReq
	5,  // 7: coin.CoinService.CoinRecordListLast7Day:input_type -> coin.Coin7DayReq
	8,  // 8: coin.CoinService.CoinWithDrawApply:input_type -> coin.CoinWithDrawApplyReq
	10, // 9: coin.CoinService.CoinWithDrawList:input_type -> coin.CoinWithDrawListReq
	13, // 10: coin.CoinService.CoinWithDrawRevoke:input_type -> coin.CoinWithDrawRevokeReq
	15, // 11: coin.CoinService.CoinWithDrawPageList:input_type -> coin.CoinWithDrawPageListReq
	17, // 12: coin.CoinService.CoinWithDrawAgree:input_type -> coin.CoinWithDrawAgreeReq
	19, // 13: coin.CoinService.CoinWithDrawRefuse:input_type -> coin.CoinWithDrawRefuseReq
	21, // 14: coin.CoinService.CoinTransferList:input_type -> coin.CoinTransferListReq
	1,  // 15: coin.CoinService.CoinGet:output_type -> coin.CoinGetRep
	3,  // 16: coin.CoinService.CoinIncr:output_type -> coin.CoinIncrRep
	3,  // 17: coin.CoinService.CoinDecr:output_type -> coin.CoinIncrRep
	7,  // 18: coin.CoinService.CoinRecordListLast7Day:output_type -> coin.Coin7DayRep
	9,  // 19: coin.CoinService.CoinWithDrawApply:output_type -> coin.CoinWithDrawApplyRep
	12, // 20: coin.CoinService.CoinWithDrawList:output_type -> coin.CoinWithDrawListRep
	14, // 21: coin.CoinService.CoinWithDrawRevoke:output_type -> coin.CoinWithDrawRevokeRep
	16, // 22: coin.CoinService.CoinWithDrawPageList:output_type -> coin.CoinWithDrawPageListRep
	18, // 23: coin.CoinService.CoinWithDrawAgree:output_type -> coin.CoinWithDrawAgreeRep
	20, // 24: coin.CoinService.CoinWithDrawRefuse:output_type -> coin.CoinWithDrawRefuseRep
	23, // 25: coin.CoinService.CoinTransferList:output_type -> coin.CoinTransferListRep
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_coin_proto_init() }
func file_proto_coin_proto_init() {
	if File_proto_coin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_coin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGetRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinIncrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinIncrRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinDecrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin7DayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin7DayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin7DayRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawApplyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawRevokeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawRevokeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawPageListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawAgreeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawRefuseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinWithDrawRefuseRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinTransferListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinTransferListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinTransferListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_coin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_coin_proto_goTypes,
		DependencyIndexes: file_proto_coin_proto_depIdxs,
		MessageInfos:      file_proto_coin_proto_msgTypes,
	}.Build()
	File_proto_coin_proto = out.File
	file_proto_coin_proto_rawDesc = nil
	file_proto_coin_proto_goTypes = nil
	file_proto_coin_proto_depIdxs = nil
}
